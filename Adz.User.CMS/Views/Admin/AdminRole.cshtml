@model Adz.User.CMS.Models.ViewModels.AdminRoleVM
@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@using Kendo.Mvc.UI
<script type="text/javascript">
    $(document).ready(function () {
        changeverticalnav(24);
        $(document).tooltip();
    });
</script>

<div class="rightheader">
    <h1>Admin Role Information</h1>
    <div class="pagelink">
        <a href="#">Admin Portal</a> /
        <a>Admin Role Information</a>
    </div>
</div>

<div id="msgbox">
    @if (ViewBag.msg != null && ViewBag.msg != "")
    {
        if (ViewBag.msg == "a1")
        {
            <div class="alert alert-block alert-success">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Success!</h4>
                Admin Role successfully created.
            </div>
        }
        else if (ViewBag.msg == "a2")
        {
            <div class="alert alert-block alert-danger">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Error</h4>
                Create Admin Role failed.
            </div>
        }
        else if (ViewBag.msg == "e1")
        {
            <div class="alert alert-block alert-success">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Success!</h4>
                Admin Role successfully updated.
            </div>
        }
        else if (ViewBag.msg == "e2")
        {
            <div class="alert alert-block alert-danger">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Error</h4>
                Update Admin Role failed.
            </div>
        }
        else if (ViewBag.msg == "aa1")
        {
            <div class="alert alert-block alert-success">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Success!</h4>
                Admin Role Access successfully created.
            </div>
        }
        else if (ViewBag.msg == "aa2")
        {
            <div class="alert alert-block alert-danger">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Error</h4>
                Create Admin Role Access failed.
            </div>
        }
        else if (ViewBag.msg == "ee1")
        {
            <div class="alert alert-block alert-success">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Success!</h4>
                Admin Role Access successfully updated.
            </div>
        }
        else if (ViewBag.msg == "ee2")
        {
            <div class="alert alert-block alert-danger">
                <a class="close" data-dismiss="alert" href="#">X</a>
                <h4 class="alert-heading">Error</h4>
                Update Admin Role Access failed.
            </div>
        }
    }
</div>

<div class="rightcontent">
    <div class="rightrow">
        <div class="col-lg-5">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Admin Role <a href="@Url.Action("AdminRoleAdd","Admin")" class="btn btn-default btn-xs"><i class="fa fa-plus-square"></i> <span>Add</span></a>
                </div>
                <div class="panel-body">
                    @(Html.Kendo().Grid<Adz.User.CMS.Models.AdminModel.AdminRole>()
                        .Name("rolegrid")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.RoleName).Title("Role Name");
                            columns.Bound(p => p.RoleId).Hidden();
                            columns.Bound(p => p.RoleId).ClientTemplate(
                            //"<a class='gridBtn' href='AdminRoleView?RoleId=#=RoleId#'><span class='fa fa-eye' title='View' ></span></a>&nbsp;&nbsp;" +
                            //"|&nbsp;&nbsp;<a class='gridBtn' href='AdminRoleEdit?RoleId=#=RoleId#'><span class='fa fa-pencil' title='Edit' ></span></a>&nbsp;&nbsp;" +
                            //"|&nbsp;&nbsp;<a class='gridBtn k-button-icontext k-grid-delete'  href=''><span class='fa fa-archive' title='Archive' ></span></a>" +
                            //"|&nbsp;&nbsp;<a class='gridBtn'  onclick='Duplicate(#=RoleId#)'><span class='fa fa-files-o' title='Duplicate' ></span></a>" +
                            "<a class='gridBtn k-button-icontext k-grid-edit'  href='' onclick='update(-#=RoleId#)' ><span class='fa fa-edit' title='Update' ></span></a>" +
                            "<div id='updatebutton-#=RoleId#' class='displaynone'><a class='k-button k-button-icontext k-primary k-grid-update' href=''><span class='k-icon k-update'></span>Update</a><a class='k-button k-button-icontext k-grid-cancel' href=''><span class='k-icon k-cancel'></span>Cancel</a></div>" +
                            "").Title("Action").Filterable(filter => filter.Enabled(false)).Width(180);
                        })
                        .Editable(editable => editable.DisplayDeleteConfirmation("Do you want to archive this Admin Role?"))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(10)
                            .Events(events => events.Error("error_handler").Sync("sync_handler").RequestEnd("onRequestEnd"))
                            .Read(read => read.Action("AdminRole_Read", "Admin"))
                            //.Destroy(destroy => destroy.Action("AdminRole_Destroy", "Admin"))
                            .Update(update => update.Action("AdminRole_Update", "Admin"))
                            .Model(model =>
                            {
                                model.Field(m => m.RoleId).Editable(false);
                                model.Id(p => p.RoleId);
                            })
                        )
                        //.Events(events => events.DataBound("onDataBound").Change("onChange"))
                        .Filterable(filterable => filterable
                            .Extra(false)
                                .Operators(operators => operators
                                .ForString(str => str.Clear()
                                    .StartsWith("Starts with")
                                    .Contains("Contains")
                                ))
                        )
                        //.Pageable(page => page
                        //    .Refresh(true)
                        //    .PageSizes(true)
                        //)
                        //.Scrollable(scr => scr.Height(280))
                        .Sortable(sortable => sortable
                            .AllowUnsort(true)
                            .SortMode(GridSortMode.MultipleColumn))
                        //.Groupable()
                        .Resizable(resize => resize.Columns(true))
                        .Reorderable(reorder => reorder.Columns(true))
                    )
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Admin Module
                </div>
                <div class="panel-body">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Module Name</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var v in Model.AdminModule)
                            {
                                <tr>
                                    <td>@v.ModuleName</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="rightrow">
        <div class="col-lg-12">
            <div class="panel-heading">
                Admin Role Access <a href="@Url.Action("AdminRoleAccessAdd","Admin")" class="btn btn-default btn-xs"><i class="fa fa-plus-square"></i> <span>Add</span></a>
            </div>

    @(Html.Kendo().Grid<Adz.User.CMS.Models.AdminModel.AdminAccess>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.RoleName).Title("Role Name");
        columns.Bound(p => p.RoleId).HtmlAttributes(new { id = "roleid-#=AccessId#" }).Hidden();
        columns.Bound(p => p.ModuleName).Title("Module Name");
        columns.Bound(p => p.ModuleId).HtmlAttributes(new { id = "moduleid-#=AccessId#" }).Hidden();
        columns.Bound(p => p.is_viewable).Title("Viewable");
        columns.Bound(p => p.is_editable).Title("Editable");
        columns.Bound(p => p.is_addable).Title("Addable");
        columns.Bound(p => p.is_deleteable).Title("Deleteable");
        columns.Bound(p => p.RoleName).ClientTemplate(
            //"<a class='gridBtn' href='AdminAccessView?RoleId=#=RoleId#'><span class='fa fa-eye' title='View' ></span></a>&nbsp;&nbsp;" +
            //"|&nbsp;&nbsp;<a class='gridBtn' href='AdminAccessEdit?RoleId=#=RoleId#'><span class='fa fa-pencil' title='Edit' ></span></a>&nbsp;&nbsp;" +
            //"|&nbsp;&nbsp;<a class='gridBtn k-button-icontext k-grid-delete'  href=''><span class='fa fa-archive' title='Archive' ></span></a>" +
            //"|&nbsp;&nbsp;<a class='gridBtn'  onclick='Duplicate(#=RoleId#)'><span class='fa fa-files-o' title='Duplicate' ></span></a>" +
            "<a class='gridBtn k-button-icontext k-grid-edit'  href='' onclick='update(#=AccessId#)' ><span class='fa fa-edit' title='Update' ></span></a>" +
            "<div id='updatebutton#=AccessId#' class='displaynone'><a class='k-button k-button-icontext k-primary k-grid-update' href=''><span class='k-icon k-update'></span>Update</a><a class='k-button k-button-icontext k-grid-cancel' href=''><span class='k-icon k-cancel'></span>Cancel</a></div>" +
            "").Title("Action").Filterable(filter => filter.Enabled(false)).Width(200);
    })
    .Editable(editable => editable.DisplayDeleteConfirmation("Do you want to archive this Admin Access?"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Events(events => events.Error("error_handler").Sync("sync_handler"))
        .Read(read => read.Action("AdminAccess_Read", "Admin"))
        //.Destroy(destroy => destroy.Action("AdminAccess_Destroy", "Admin"))
        .Update(update => update.Action("AdminAccess_Update", "Admin"))
        .Model(model =>
        {
            model.Field(m => m.RoleName).Editable(false);
            model.Field(m => m.RoleId).Editable(false);
            model.Field(m => m.ModuleName).Editable(false);
            model.Field(m => m.ModuleId).Editable(false);
            model.Id(p => p.AccessId);
        })
    )
                //.Events(events => events.DataBound("onDataBound").Change("onChange"))
    .Filterable(filterable => filterable
        .Extra(false)
            .Operators(operators => operators
            .ForString(str => str.Clear()
                .StartsWith("Starts with")
                .Contains("Contains")
            ))
    )
    .Pageable(page => page
        .Refresh(true)
        .PageSizes(true)
    )
                //.Scrollable(scr => scr.Height(280))
    .Sortable(sortable => sortable
        .AllowUnsort(true)
        .SortMode(GridSortMode.MultipleColumn))
                //.Groupable()
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
        )
        </div>
    </div>
</div>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var result = "";
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message = this;
                    });
                }
            });
            if (message != "") {
                result = '<div class="alert alert-block alert-success">'
                + '<a class="close" data-dismiss="alert" href="#">X</a>'
                + '<h4 class="alert-heading">Error</h4>'
                + message
                + '</div>';

                $("#msgbox").html(result);
            }
        }
    }
</script>


<script type="text/javascript">
    function update(id) {
        $('#updatebutton' + id).show();
    }

    function sync_handler(e) {
        this.read();
    }

    function onRequestEnd(e) {
        if (e.type == "update") {
            $("#grid").data("kendoGrid").dataSource.read();
        }
    }
</script>
